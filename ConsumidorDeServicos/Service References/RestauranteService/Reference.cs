//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConsumidorDeServicos.RestauranteService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Restaurante", Namespace="http://schemas.datacontract.org/2004/07/WcfTest.Classes")]
    [System.SerializableAttribute()]
    public partial class Restaurante : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EnderecoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NomeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Endereco {
            get {
                return this.EnderecoField;
            }
            set {
                if ((object.ReferenceEquals(this.EnderecoField, value) != true)) {
                    this.EnderecoField = value;
                    this.RaisePropertyChanged("Endereco");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nome {
            get {
                return this.NomeField;
            }
            set {
                if ((object.ReferenceEquals(this.NomeField, value) != true)) {
                    this.NomeField = value;
                    this.RaisePropertyChanged("Nome");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="RestauranteService.IRestauranteService")]
    public interface IRestauranteService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestauranteService/BuscarTodosRestaurantes", ReplyAction="http://tempuri.org/IRestauranteService/BuscarTodosRestaurantesResponse")]
        ConsumidorDeServicos.RestauranteService.Restaurante[] BuscarTodosRestaurantes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestauranteService/BuscarTodosRestaurantes", ReplyAction="http://tempuri.org/IRestauranteService/BuscarTodosRestaurantesResponse")]
        System.Threading.Tasks.Task<ConsumidorDeServicos.RestauranteService.Restaurante[]> BuscarTodosRestaurantesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestauranteService/BuscarRestaurantePorId", ReplyAction="http://tempuri.org/IRestauranteService/BuscarRestaurantePorIdResponse")]
        ConsumidorDeServicos.RestauranteService.Restaurante BuscarRestaurantePorId(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestauranteService/BuscarRestaurantePorId", ReplyAction="http://tempuri.org/IRestauranteService/BuscarRestaurantePorIdResponse")]
        System.Threading.Tasks.Task<ConsumidorDeServicos.RestauranteService.Restaurante> BuscarRestaurantePorIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestauranteService/AdicionarRestaurante", ReplyAction="http://tempuri.org/IRestauranteService/AdicionarRestauranteResponse")]
        bool AdicionarRestaurante(ConsumidorDeServicos.RestauranteService.Restaurante restaurante);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestauranteService/AdicionarRestaurante", ReplyAction="http://tempuri.org/IRestauranteService/AdicionarRestauranteResponse")]
        System.Threading.Tasks.Task<bool> AdicionarRestauranteAsync(ConsumidorDeServicos.RestauranteService.Restaurante restaurante);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRestauranteServiceChannel : ConsumidorDeServicos.RestauranteService.IRestauranteService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RestauranteServiceClient : System.ServiceModel.ClientBase<ConsumidorDeServicos.RestauranteService.IRestauranteService>, ConsumidorDeServicos.RestauranteService.IRestauranteService {
        
        public RestauranteServiceClient() {
        }
        
        public RestauranteServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RestauranteServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RestauranteServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RestauranteServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ConsumidorDeServicos.RestauranteService.Restaurante[] BuscarTodosRestaurantes() {
            return base.Channel.BuscarTodosRestaurantes();
        }
        
        public System.Threading.Tasks.Task<ConsumidorDeServicos.RestauranteService.Restaurante[]> BuscarTodosRestaurantesAsync() {
            return base.Channel.BuscarTodosRestaurantesAsync();
        }
        
        public ConsumidorDeServicos.RestauranteService.Restaurante BuscarRestaurantePorId(int id) {
            return base.Channel.BuscarRestaurantePorId(id);
        }
        
        public System.Threading.Tasks.Task<ConsumidorDeServicos.RestauranteService.Restaurante> BuscarRestaurantePorIdAsync(int id) {
            return base.Channel.BuscarRestaurantePorIdAsync(id);
        }
        
        public bool AdicionarRestaurante(ConsumidorDeServicos.RestauranteService.Restaurante restaurante) {
            return base.Channel.AdicionarRestaurante(restaurante);
        }
        
        public System.Threading.Tasks.Task<bool> AdicionarRestauranteAsync(ConsumidorDeServicos.RestauranteService.Restaurante restaurante) {
            return base.Channel.AdicionarRestauranteAsync(restaurante);
        }
    }
}
